<?xml version="1.0" encoding="UTF-8" standalone="no"?><!--Created with JFLAP 6.4.--><structure>&#13;
	<type>fa</type>&#13;
	<automaton>&#13;
		<!--The list of states.-->&#13;
		<state id="0" name="q0">&#13;
			<x>284.0</x>&#13;
			<y>112.0</y>&#13;
			<initial/>&#13;
		</state>&#13;
		<state id="1" name="downl">&#13;
			<x>646.0</x>&#13;
			<y>116.0</y>&#13;
		</state>&#13;
		<state id="2" name="hilopar">&#13;
			<x>888.0</x>&#13;
			<y>125.0</y>&#13;
		</state>&#13;
		<state id="3" name="fgserver">&#13;
			<x>513.0</x>&#13;
			<y>234.0</y>&#13;
		</state>&#13;
		<state id="4" name="q4">&#13;
			<x>695.0</x>&#13;
			<y>245.0</y>&#13;
		</state>&#13;
		<state id="5" name="server">&#13;
			<x>828.0</x>&#13;
			<y>245.0</y>&#13;
			<final/>&#13;
		</state>&#13;
		<state id="6" name="bgserver">&#13;
			<x>172.0</x>&#13;
			<y>298.0</y>&#13;
		</state>&#13;
		<state id="7" name="port">&#13;
			<x>200.0</x>&#13;
			<y>431.0</y>&#13;
		</state>&#13;
		<state id="8" name="wait&amp;server">&#13;
			<x>405.0</x>&#13;
			<y>437.0</y>&#13;
			<final/>&#13;
		</state>&#13;
		<state id="9" name="updateinfo">&#13;
			<x>431.0</x>&#13;
			<y>295.0</y>&#13;
		</state>&#13;
		<!--The list of transitions.-->&#13;
		<transition>&#13;
			<from>1</from>&#13;
			<to>2</to>&#13;
			<controlx>779</controlx>&#13;
			<controly>100</controly>&#13;
			<read>if(!peer.end)</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>7</from>&#13;
			<to>6</to>&#13;
			<read>error</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>2</from>&#13;
			<to>1</to>&#13;
			<read>snd(downl)</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>0</from>&#13;
			<to>3</to>&#13;
			<controlx>409</controlx>&#13;
			<controly>158</controly>&#13;
			<read>fgserver</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>7</from>&#13;
			<to>8</to>&#13;
			<controlx>303</controlx>&#13;
			<controly>412</controly>&#13;
			<read>success</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>0</from>&#13;
			<to>6</to>&#13;
			<controlx>256</controlx>&#13;
			<controly>212</controly>&#13;
			<read>bgserver</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>1</from>&#13;
			<to>0</to>&#13;
			<read>rcv(error)</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>6</from>&#13;
			<to>7</to>&#13;
			<controlx>210</controlx>&#13;
			<controly>359</controly>&#13;
			<read>getport</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>9</from>&#13;
			<to>0</to>&#13;
			<read>rcv(stopserverok)</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>3</from>&#13;
			<to>5</to>&#13;
			<controlx>688</controlx>&#13;
			<controly>162</controly>&#13;
			<read>success</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>9</from>&#13;
			<to>8</to>&#13;
			<read>error</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>1</from>&#13;
			<to>1</to>&#13;
			<read>if(secuencial)</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>8</from>&#13;
			<to>6</to>&#13;
			<read>if(hilo-ocupado)</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>0</from>&#13;
			<to>1</to>&#13;
			<controlx>468</controlx>&#13;
			<controly>85</controly>&#13;
			<read>snd(download)</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>3</from>&#13;
			<to>0</to>&#13;
			<read>error</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>1</from>&#13;
			<to>0</to>&#13;
			<read>rcv(downlRes)</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>4</from>&#13;
			<to>3</to>&#13;
			<read>snd(newport)</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>6</from>&#13;
			<to>0</to>&#13;
			<read>error</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>8</from>&#13;
			<to>9</to>&#13;
			<controlx>398</controlx>&#13;
			<controly>359</controly>&#13;
			<read>snd(stopserver)</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>3</from>&#13;
			<to>4</to>&#13;
			<controlx>599</controlx>&#13;
			<controly>224</controly>&#13;
			<read>error(port)</read>&#13;
		</transition>&#13;
		<note>&#13;
			<text>maneja un hilo nuevo para la
descarga concurrente
del fichero</text>&#13;
			<x>933.0</x>&#13;
			<y>100.0</y>&#13;
		</note>&#13;
		<note>&#13;
			<text>en este estado el cliente ejecuta un
servidor en segundo plano, este estado en realidad
es el estado wait, a la vez que el estado server</text>&#13;
			<x>436.0</x>&#13;
			<y>447.0</y>&#13;
		</note>&#13;
		<note>&#13;
			<text>consigue el puerto
para el servidor en 
segundo plano</text>&#13;
			<x>63.0</x>&#13;
			<y>441.0</y>&#13;
		</note>&#13;
		<note>&#13;
			<text>si hay que atender más
de 1 petición a la vez
se vuelve a lanzar otro hilo</text>&#13;
			<x>234.0</x>&#13;
			<y>303.0</y>&#13;
		</note>&#13;
		<note>&#13;
			<text>en este estado el cliente
ejecuta un servidor en
primer plano</text>&#13;
			<x>870.0</x>&#13;
			<y>199.0</y>&#13;
		</note>&#13;
		<note>&#13;
			<text>si downl de varios peers de forma
secuencial, hará esta parte del automata
para cada pedazo del documento
que venga de cada peer</text>&#13;
			<x>376.0</x>&#13;
			<y>12.0</y>&#13;
		</note>&#13;
	</automaton>&#13;
</structure>